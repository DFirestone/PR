Gdzie dodac sprawdzanie płci?
Zaimplementowac koniec sekcji krytycznej


ALGORYTM MA BYĆ TAK NAPISANY, ŻEBY OSOBA TRZECIA MOGŁA GO ZAIMPLEMENTOWAĆ


-------------------------------------------------------
------- D A T A   D E F I N I T I O N -----------------
-------------------------------------------------------

//------------_DO POPRRAWY-------------------------//

type CUSTOMER is record of
	id : INTEGER
	sex: { "M", "F" }
end

type REQUEST is record of
	timeStamp : INTEGER
	customer : CUSTOMER
end

type PACKET is record of
	request : REQUEST
	msgType : INTEGER 	/*	1 - ENTER_REQUEST
					2 - REPLY_ENTER_REQUEST */
end

-------------------------------------------
------- C O N S T A N T S -----------------
-------------------------------------------

//-------- Tagi wiadomości ------------//
CHANGING_ROOM_0 : CONST INTEGER
CHANGING_ROOM_1 : CONST INTEGER
CHANGING_ROOM_2 : CONST INTEGER
SHOWER 			: CONST INTEGER

//-------- Typy wiadomości ------------//
ENTER_REQUEST 			: CONST INTEGER
REPLY_ENTER_REQUEST 	: CONST INTEGER

//-------- Inne ------------//
CHANGING_ROOM_CAPACITY 	: CONST INTEGER
SHOWER_CAPACITY 		: CONST INTEGER

----------------------------------------------------------------------------
------- A D A P T E D   L A M P O R T   A L G O R I T H M ------------------
----------------------------------------------------------------------------


// -------------- DZIAŁANIA MONITORA -----------------------//
msgIn	 	: INTEGER
pcktOut		: PACKET
clock_i		: INTEGER
d			: INTEGER

nProcesses : INTEGER // liczba procesów

request 	: REQUEST
requestQueue : REQUEST[][] /* requestQueue[1][0] - szatnia nr 1, pierwszy w kolejce */
requestAck	: INTEGER[] /* tablica liczby potwierdzen poszczególnych pomieszczeń 
							0 - szatnia 0, 
							1 - szatnia 1, 
							2 - szatnia 2, 
							3 - prysznic */



when e_send(Pi, Pj, msgType:INTEGER, msgTag:INTEGER) do
	clock_i := clock_i + d

	pcktOut.msgType := msgType

	if (msgTag == ENTER_REQUEST) then
		request.timeStamp = clock_i
		request.customer.id = id
		request.customer.sex = sex 

		pcktOut.request = request

		requestQueue[0] = request
	end if

	send(Pi, Pj, pcktOut, msgTag)
end when

when e_receive(Qj, Qi, pcktIn : PACKET, msgTag : INTEGER) do
	clock_i := max(clock_i, pcktIn.request.timeStamp) + d

	if (msgTag == ENTER_REQUEST) then
		if(requestQueue[msgTag][0] != NULL) then
			if (requestQueue[msgTag][0].timeStamp > pcktIn.request.timeStamp) then
//sprawdzanie M pierwszych ludzi w kolejce(tej samej płci)
				send(Pi, Pj, REPLY_ENTER_REQUEST, msgTag)
			else
				addToSortedQueue(msgTag,pcktIn.request)
			end if
		else
			send(Pi, Pj, REPLY_ENTER_REQUEST, msgTag)
		end if
	else
		requestAck[msgTag] += 1

		if (requestAck[msgTag] > nProcesses) then
			for i in [0..3] do
				if (i != msgTag) then
					deleteMyselfFromQueue(i)
				end if
			end for
		end if
	end if

end when


3 kolejki - po jednej dla każdej szatni, plus 1 dla prysznicy


// ALGORYTM DZIAŁANIA PROCESÓW KLIENTÓW
e_send - Klient chce wejść do wolnej (i odpowiadającej mu płcią) szatni:
Aby wejść do sekcji krytycznej:
1. Proces wysyła żądanie wejścia do szatni M1(send z tagiem = CHANGING_ROOM_1) wraz ze swoim znacznikiem czasowym i dodaje swoje żądanie do własnej kolejki.
2. Powtarzamy punkt 1. dla pozostałych szatni.
3. Wchodzimy do pierwszej szatni na wejście do której dostaniemy zezwolenie od N-K pozostałych procesów (klientów), gdzie N to liczba wszystkich procesów a K to pojemność szatni.
4. Przed wejściem do sekcji krytycznej usuwamy swoje żądanie z kolejek do szatni którzych nie wybraliśmy oraz wysyłamy odpowiedzi na wszystkie żądania w kolejkach a następnie usuwamy je z kolejek.
5. Po wyjściu z sekcji krytycznej usuwamy własne żądanie z kolejki żądań do opuszczanej właśnie szatni oraz wysyłamy odpowiedzi na wszystkie żądania w kolejce a następnie usuwamy je z kolejki. 

e_receive Klient (proces) Pj otrzymuje żądanie wejścia do szatni Mk przez Proces Pi
Kiedy proces Pj uzyska ŻĄDANIE wejścia do sekcji krytycznej od procesu Pi:
1. Proces Pj sprawdza czy wg jego kolejki żądań proces Pj może wejść i wysyła odpowiedź typu ZEZWOLENE procesowi Pi.
ZEZWOLENIE jest wysłane jeżeli zachodzą następujące warunki:
	a) sam proces Pj nie jest w sekcji krytycznej, i nie ma zamiaru wchodzić
	LUB
	b) proces Pj chce wejść do sekcji krytycznej ale znacznik czasowy ŻĄDANIA procesu Pi jest mniejszy niż procesu Pj
2. Jeśli nie można wysłać ZEZWOLENIA, ŻĄDANIE procesu Pi zostaje dodane do kolejki żądań dostępu do danej szatni na odpowiedniej pozycji (ŻĄDANIA posortowane względem znaczników czasowych).


Procedura obsługi sali z natryskami przebiega podobnie z tym, że jest jedna kolejka (nie obowiązuje punkt 2. z e_send).