type CHANGING_ROOM is record of
	capacity : Integer /* wolne miejsca w szatni */
	sexOcupancy : { "M", "F", "-" }	/* jaka plec zajmuje obecnie dana sale */	
end

type CUSTOMER is record of
	userId : Integer
	sex: { "M", "F" }
	ocupancy: { 0, 1, 2, 3, 4, 5 } 	/*	0 - none ocupancy
						1 - 1st changing room
						2 - 2nd changing room
						3 - 3rd changing room
						4 - showers
						5 - pool */
end

type MESSAGE is record of
	messegeType : Integer 	/*	1 - ENTER_REQUEST
					2 - REPLY_ENTER_REQUEST
					3 - RELEASE_LOCKER_MESSAGE */
	sender : CUSTOMER
	receiverId : Integer
end

type PACKET is record of
	tag : Integer /* typ wiadomosci */
	mId : Integer /* identyfikator wiadomosci */
	sId : Integer /* identyfikator nadawcy wiadomosci */
	rId : Integer /* identyfikator adresata wiadomosci */
	
	msg : MESSAGE /* przesylana wiadomosc */
end





----------------------------------------------
------- O L D   V E R S I O N ----------------
----------------------------------------------

type locker is record of
	string : gender
	int : occupancy
end record

locker[] lockers[3]
int myLockerId = -1
string gender = ("male"|"famale")
//customers - wszystkie dzialajace procesy

when e_enter_to_locker() do

	while (myLockerId < 0) do
	//uaktualnienie wszystkich szatni broadcast-em
	for all customer in customers do
		e_send(customer, TRY_ENTER_MSG)
	end for
	
	//uaktualniamy stan szatnii
	for all customer in customers do
		int customerLockerId
		e_receive(msg, customerLockerId)
		if (msg == MY_LOCKER_ID_MSG) then
			lockerRooms[customerLockerId] += 1
		end if
	end for
	
	//wybor szatni
	
		for all lockerRoom in lockers do
			if (lockerRoom.occupancy < 1) or (lockerRoom.gender == gender) then
				if myLockerId == -1 then
					myLockerId = lockerRoom
				else
	//jesli sa dwie szatnie zapełnione osobami naszej plci				
	//wybieramy szatnie w ktorej jest większe zapelnienie
					if (myLockerId.occupancy < lockerRoom.occupancy) then
						myLockerId = lockerRoom
					end if
				end if		
			end if
		end for
	end while

	//wejscie do szatni, informujemy innych broadcastem
	for all customer in customers do
		e_send(ENTER_MSG, myLockerId)
	end for

end when


when e_return_to_locker() do
	//zwalnianie szatni (broadcast)
	for all customer in customers do
		e_send(EXIT_MSG, myLockerId)
	end for
end when